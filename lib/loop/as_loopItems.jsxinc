// Copyright (c) 2019 Oleksandr Semeniuk
// This code is licensed under MIT license
// See also http://www.opensource.org/licenses/mit-license.php

// version: 1.0.1
// date: Jul 23 2019

/**
 * 
 * @param {FolderItem} folder 
 * @param {boolean} intoSubfolders 
 * @param {Function} func 
 * @param {array} args 
 * @param {array} filterItemsNames 
 * @param {array} filterItemsTypes as_ItemType
 */
function as_loopItems(folder, intoSubfolders, func, args, filterItemsNames, filterItemsTypes) {
    
    // CHECK ARGS
    if(args === undefined) {
        args = [];
    }

    // VARS
    var results = [];

    // LOOP ITEMS
    for (var i = 1, item; i <= folder.numItems; i++) {
        item = folder.item(i);

        // CHECK
        var nameMatch = (filterItemsNames === undefined) || (filterItemsNames.length == 0) || (as_arrayCheckValue(item.name, filterItemsNames) >= 0);
        var typeMatch = (filterItemsTypes === undefined) || (filterItemsTypes.length == 0) || (as_arrayCheckValue(as_itemGetType(item), filterItemsTypes) >= 0);
        
        // DO
        if(nameMatch && typeMatch) {
            var result = func.apply(undefined, [item].concat(args));
            if(result !== undefined) {
                results.push(result);
            }
        }

        // SUBFOLDERS
        if((item instanceof FolderItem) && intoSubfolders) {
            results = results.concat(as_loopItems(item, intoSubfolders, func, args, filterItemsNames, filterItemsTypes));
        }
    }

    // RETURN
    return results;
}